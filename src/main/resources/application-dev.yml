domain:
  client: ${SWAGGER_CLIENT_URL:http://localhost:7276}
  server: ${SWAGGER_SERVER_URL:http://localhost:8021}

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${EXPLORER_HOST}:${EXPLORER_PORT}/${EXPLORER_DB}?currentSchema=${spring.jpa.properties.hibernate.default_schema}
    username: ${EXPLORER_USER}
    password: ${EXPLORER_PASSWORD}
    driver-class-name: org.postgresql.Driver
    # Hikari specific configs
    hikari:
      pool-name: explorer-api-pool
      minimum-idle: 1 #minimum number of idle connections maintained by HikariCP in a connection pool
      maximum-pool-size: 32 #maximum pool size
      idle-timeout: 300000 #maximum idle time for connection
      max-lifetime: 900000 #maximum lifetime in milliseconds of a connection in the pool after it is closed.
      connection-timeout: 50000 #maximum number of milliseconds that a client will wait for a connection
      auto-commit: false #default auto-commit behavior.
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: ${DB_SCHEMA:auth}
        show_sql: true
        format_sql: true
        jdbc:
          batch_size: 100
  flyway:
    enabled: ${FLYWAY_ENABLE:false}
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    group: true
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql
    locations: db/migration
    default-schema: ${spring.jpa.properties.hibernate.default_schema}
    schemas: ${spring.jpa.properties.hibernate.default_schema}
    validate-on-migrate: ${FLYWAY_VALIDATE:false}
    out-of-order: true

redis:
  databaseIndex: 0
  master: ${REDIS_SENTINEL_MASTER_NAME:mymaster}
  password: ${REDIS_SENTINEL_PASSWORD:redis_sentinel_password}
  testOnBorrow: false
  maxTotal: 10
  maxIdle: 5
  minIdle: 3
  testOnReturn: false
  testWhileIdle: false
  sentinels:
    - host: ${REDIS_SENTINEL_HOST:127.0.0.1}
      port: ${REDIS_SENTINEL_PORT:26379}

keycloak:
  realm: ${KEYCLOAK_REALM_NAME:cardano_authen}
  auth-server-url: ${KEYCLOAK_SERVER_URL:http://10.4.21.151:8080/}
  ssl-required: external
  resource: ${KEYCLOAK_CLIENT_ID:client_test}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:LuJVyHvOipnRFFAWO7AnUFWkyKCJ3ax4}
  use-resource-role-mappings: ${KEYCLOAK_ROLE_MAPPING:true}
  bearer-only: ${KEYCLOAK_BEARER_ONLY:true}

timeToLiveRedisSignOut: ${TIME_TO_LIVE_REDIS_SIGN_OUT:48}

rsa:
  key:
    public-auth: ${RSA_PUBLIC_KEY_AUTH}
    private-mail: ${RSA_PRIVATE_KEY_MAIL}
    public-mail: ${RSA_PUBLIC_KEY_MAIL}
