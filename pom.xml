<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>org.cardanofoundation.authentication</groupId>
	<artifactId>auth-service</artifactId>
	<version>0.5.0-SNAPSHOT-sanchonet</version>

	<name>auth-service</name>
	<description>Auth Service for Spring Boot</description>

	<scm>
		<connection>scm:git:git://github.com/cardano-foundation/cf-explorer-authentication.git</connection>
		<url>https://github.com/cardano-foundation/cf-explorer-authentication</url>
		<developerConnection>scm:git:git://github.com/cardano-foundation/cf-explorer-authentication.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<url>https://github.com/cardano-foundation/cf-explorer-authentication/issues</url>
		<system>GitHub issues</system>
	</issueManagement>

	<licenses>
		<license>
			<name>MPL 2.0</name>
			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<organization>Cardano Foundation</organization>
			<organizationUrl>https://cardanofoundation.org</organizationUrl>
		</developer>
	</developers>

	<organization>
		<name>Cardano Foundation</name>
		<url>https://cardanofoundation.org</url>
	</organization>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>gitlab-private-registry</id>
			<url>https://pro.gitlab.metadata.dev.cf-deployments.org/api/v4/projects/2/packages/maven</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<java.version>17</java.version>
		<version.maven-surefire-plugin>3.0.0-M5</version.maven-surefire-plugin>
		<version.jacoco-maven-plugin>0.8.8</version.jacoco-maven-plugin>
		<version.pitest>1.14.2</version.pitest>
		<version.pitest-junit5>1.1.1</version.pitest-junit5>
		<version.maven-site-plugin>4.0.0-M2</version.maven-site-plugin>
		<version.sonarcube-maven-plugin>3.9.1.2184</version.sonarcube-maven-plugin>
		<version.maven-project-info-reports-plugin>3.3.0</version.maven-project-info-reports-plugin>
		<version.bloxbean>0.4.3</version.bloxbean>
		<version.spring-boot-starter-aop>3.0.4</version.spring-boot-starter-aop>
		<version.pitest>1.14.2</version.pitest>
		<version.pitest-junit5>1.1.1</version.pitest-junit5>
		<version.explorer-common>0.9.0-PR222</version.explorer-common>
		<version.flyway>9.16.0</version.flyway>
		<version.keycloak>15.0.2</version.keycloak>
		<version.jjwt>0.11.5</version.jjwt>
		<version.bcprov-jdk15on>1.70</version.bcprov-jdk15on>
		<version.hibernate-validator>8.0.0.Final</version.hibernate-validator>
		<version.eddsa>0.3.0</version.eddsa>
		<version.springdoc-webmvc-ui>2.1.0</version.springdoc-webmvc-ui>
		<version.github-classgraph>4.8.157</version.github-classgraph>
		<version.mapstruct>1.5.3.Final</version.mapstruct>
		<version.springdoc-openapi-common>1.7.0</version.springdoc-openapi-common>
		<version.lettuce-core>6.2.3.RELEASE</version.lettuce-core>
		<version.jakarta-persistence-api>3.1.0</version.jakarta-persistence-api>
		<version.jakarta-servlet-api>6.0.0</version.jakarta-servlet-api>
		<version.snakeyaml>2.0</version.snakeyaml>
		<version.unirest-java>1.4.9</version.unirest-java>
		<version.spotless-maven-plugin>2.36.0</version.spotless-maven-plugin>
		<version.google-java-format>1.15.0</version.google-java-format>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${version.flyway}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${version.jjwt}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${version.jjwt}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${version.jjwt}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${version.bcprov-jdk15on}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${version.hibernate-validator}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${version.springdoc-webmvc-ui}</version>
		</dependency>
		<dependency>
			<groupId>io.github.classgraph</groupId>
			<artifactId>classgraph</artifactId>
			<version>${version.github-classgraph}</version>
		</dependency>
		<dependency>
			<groupId>com.bloxbean.cardano</groupId>
			<artifactId>cardano-client-lib</artifactId>
			<version>${version.bloxbean}</version>
		</dependency>
		<dependency>
			<groupId>com.bloxbean.cardano</groupId>
			<artifactId>cardano-client-backend-blockfrost</artifactId>
			<version>${version.bloxbean}</version>
		</dependency>
		<dependency>
			<groupId>net.i2p.crypto</groupId>
			<artifactId>eddsa</artifactId>
			<version>${version.eddsa}</version>
		</dependency>
		<dependency>
			<groupId>org.cardanofoundation.explorer</groupId>
			<artifactId>common</artifactId>
			<version>${version.explorer-common}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${version.mapstruct}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-common</artifactId>
			<version>${version.springdoc-openapi-common}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${version.spring-boot-starter-aop}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>io.lettuce</groupId>
			<artifactId>lettuce-core</artifactId>
			<version>${version.lettuce-core}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-properties-migrator</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>${version.jakarta-persistence-api}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${version.jakarta-servlet-api}</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${version.snakeyaml}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-boot-starter</artifactId>
			<version>${version.keycloak}</version>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-admin-client</artifactId>
			<version>${version.keycloak}</version>
		</dependency>
		<dependency>
			<groupId>com.mashape.unirest</groupId>
			<artifactId>unirest-java</artifactId>
			<version>${version.unirest-java}</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.keycloak.bom</groupId>
				<artifactId>keycloak-adapter-bom</artifactId>
				<version>${version.keycloak}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${version.spotless-maven-plugin}</version>
				<configuration>
					<java>
						<excludes>
							<exclude>build/**/*.java</exclude>
						</excludes>
						<removeUnusedImports/>
						<replaceRegex>
							<name>Remove wildcard imports</name>
							<searchRegex>import\\s+[^\\*\\s]+\\*;(\\r\\n|\\r|\\n)</searchRegex>
							<replacement>$1</replacement>
						</replaceRegex>
						<googleJavaFormat>
							<version>${version.google-java-format}</version>
							<style>GOOGLE</style>
						</googleJavaFormat>
						<importOrder>
							<order>
								java,jakarta,javax,lombok,org.springframework,,\\#,org.junit,\\#org.junit,org.cardanofoundation,\\#org.cardanofoundation
							</order>
						</importOrder>
						<indent>
							<spaces>true</spaces>
							<spacesPerTab>2</spacesPerTab>
						</indent>
						<trimTrailingWhitespace/>
						<endWithNewline/>
					</java>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.4.2.Final</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.maven-surefire-plugin}</version>
				<configuration>
					<includes>
						<include>**/*TestCases.java</include>
						<include>**/*Tests.java</include>
						<include>**/*TestCase.java</include>
						<include>**/*Test.java</include>
						<include>**/Test*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco-maven-plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-code-coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${version.maven-site-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${version.maven-project-info-reports-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${version.sonarcube-maven-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${version.pitest}</version>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>${version.pitest-junit5}</version>
					</dependency>
				</dependencies>
				<configuration>
					<features>
						<feature>+auto_threads</feature>
					</features>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${version.pitest}</version>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>${version.pitest-junit5}</version>
					</dependency>
				</dependencies>
				<configuration>
					<features>
						<feature>+auto_threads</feature>
					</features>
					<targetClasses>
						<param>org.cardanofoundation.authentication.*</param>
					</targetClasses>
					<targetTests>
						<param>org.cardanofoundation.authentication.*</param>
					</targetTests>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
